name: CI Tests

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox virtualenv
      - name: Lint
        run: "nox -s lint"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
          - "ubuntu-py37"
          - "ubuntu-py38"
          - "ubuntu-py39"
          - "ubuntu-py310"

          - "macos-py37"
          - "macos-py38"
          - "macos-py39"
          - "macos-py310"

          - "windows-py37"
          - "windows-py38"
          - "windows-py39"
          - "windows-py310"

        include:
          - name: "ubuntu-py37"
            python: "3.7"
            os: ubuntu-latest
          - name: "ubuntu-py38"
            python: "3.8"
            os: ubuntu-latest
          - name: "ubuntu-py39"
            python: "3.9"
            os: ubuntu-latest
          - name: "ubuntu-py310"
            python: "3.10"
            os: ubuntu-latest

          - name: "macos-py37"
            python: "3.7"
            os: macos-latest
          - name: "macos-py38"
            python: "3.8"
            os: macos-latest
          - name: "macos-py39"
            python: "3.9"
            os: macos-latest
          - name: "macos-py310"
            python: "3.10"
            os: macos-latest

          - name: "windows-py37"
            python: "3.7"
            os: windows-latest
          - name: "windows-py38"
            python: "3.8"
            os: windows-latest
          - name: "windows-py39"
            python: "3.9"
            os: windows-latest
          - name: "windows-py310"
            python: "3.10"
            os: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox virtualenv
      - name: Project internals test build
        run: "nox -p ${{ matrix.python }} -s tests"
      - name: Project security test
        run: "nox -p ${{ matrix.python }} -s safety_tests"
      - name: Send coverage report to codeclimate
        uses: paambaati/codeclimate-action@v3
        with:
          coverageCommand: echo "Ignore rerun"
          coverageLocations: ${{github.workspace}}/coverage.xml:coverage.py
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
      - name: Send coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          env_vars: OS=${{ matrix.os }},PYTHON=${{ matrix.python }}
          file: ./coverage.xml
